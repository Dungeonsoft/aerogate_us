using UnityEngine;
using System.Collections;
using System.Collections.Specialized;

public class  ValueDeliverScript : MonoBehaviour
{
    public static bool logInAlready = false;
    public static int flightNumber = 0; //기본은 0(포커)
    public static int skinNumber = 0;   //기본은 0(기능없는 스킨)
    public static int resultSkinnumber = -1;
    public static int skinLevel = 1;
    public static int bulletLevel = 1; //기본은 1.
    public static int bombRecycle = 60;	//기본은 60.

    public static int skillLevel = 1;   //기본은 1.

    public static int scorePlay = 0;
    public static int scoreResult = 0;
    public static int scoreHigh = 0;            //Json//

    public static int portalUpScore = 0;

    public static int coinPlay = 0;
    public static int coinRest = 1000;            //Json//

    public static bool isHigh = false;      //최고점수 상태에 도달 했는지 여부 확인.
    public static int highFlight;           //최고점수기체.            //Json//
    public static int highSkin;             //최고점수스킨.            //Json//
    public static int highChar;             //최고점수캐릭터.            //Json//
    public static int highBullet;           //최고점수총알.            //Json//
    public static int highBomb;             //최고점수폭탄.            //Json//
    public static int highReinforce;        //최고점수강화품.            //Json//
    public static int highAssist;           //최고점수보조품.            //Json//

    //스페셜 출격에 관련된 적기 갯수를 세는 부분.//
    public static int dartCount = 10000;    //기본은 0.            //Json//
    public static int dustCount = 10000;    //기본은 0.            //Json//
    public static int shieldCount = 10000;    //기본은 0.            //Json//
    public static int spinballCount = 10000;    //기본은 0.            //Json//

    public static int dartCountTemp = 0;
    public static int dustCountTemp = 0;
    public static int shieldCountTemp = 0;
    public static int spinballCountTemp = 0;
    //스페셜 출격에 관련된 적기 갯수를 세는 부분.//

    public static bool gameEndResult = false;   //기본은 false. 결과창 테스트를 위해선 true로 바꾸어야 됨.
    public static bool isResultToHanger = false;

    public static bool alreadyRoadPhpData = false;
    public static bool isTableGet = false;

    public static int gasRest = 5;            //Json//

    public static int medalRest = 10000; //2000.            //Json//
    public static int medalPlay = 0;

    public static int oldTime;

    public static int userLevel = 1;            //Json//
    public static int userExp = 0;            //Json//

    // 내비행기 목록.

    public static int flight000Skin = 0;            //Json//
    public static int flight000Bullet = 1;  //기본 1.            //Json//
    public static int flight000Skill = 1;   //기본 1.            //Json//
    public static Vector3 flight000SkinPosition = new Vector3(43, 163, 0);

    public static int flight001Skin = 0;            //Json//
    public static int flight001Bullet = 1;            //Json//
    public static int flight001Skill = 1;            //Json//
    public static Vector3 flight001SkinPosition = new Vector3(43, 163, 0);

    public static int flight002Skin = 0;            //Json//
    public static int flight002Bullet = 1;            //Json//
    public static int flight002Skill = 1;            //Json//
    public static Vector3 flight002SkinPosition = new Vector3(43, 163, 0);


    public static int skinExp = 0;  //활성화된 비행기가 인게임에서 얻는 스킨 경험치를 임시 저장하는 변수.
    public static bool isFlightSkinExpLoad;            //Json//
    public static bool isFlightSkinLevelLoad;            //Json//
    public static bool isFlightDuraLevelLoad;            //Json//
    public static Hashtable flightSkinExp = new Hashtable();            //Json//
    public static Hashtable flightSkinLevel = new Hashtable();            //Json//
    public static Hashtable flightSkinDura = new Hashtable();   // 스킨 내구도.            //Json//

    public static int purchaseCharge = 0;

    public static bool isMyEquipload;            //Json//
    public static Hashtable myEquip = new Hashtable();            //Json//
    public static GameObject SelectedItem;
    public static string SelectedItemSprite;

    public static int activeBomb = 5;            //Json//
    public static int activeReinforce;            //Json//
    public static int activeAssist;            //Json//
    public static int activeOper = 1;            //Json//
    
    public static int defenceItem = 0;  //기본이 0

    public static string[] bombSpriteName;
    public static string[] reinforceSpriteName;
    public static string[] assistSpriteName;
    public static string[] operSpriteName;

    public static ArrayList enemyInGame = new ArrayList();

    //이큅 관련된 변수들.

    public static float flightAttackPower = 0f;
    public static float flightAttackSpeed = 0f;
    public static int targetUfoType;
    public static bool isCriticalExel =false; //임시로 TRUE로 변경.

    public static int dartApearPer = 2500;  //2500
    public static int dustApearPer = 5000;  //5000
    public static int spinballApearPer = 7500;  //7500

    public static bool isSpecialMissionSelect = false;            //Json//
    public static int specialAttackType = 0;            //Json//

    public static bool isSpecialAttackOn = false;   //원랜 false.            //Json//
    public static bool isSpecialAnimation = false;  //원랜 false.

    public static int detectorType = -1; //원래 -1.

    public static bool wingboxDouble = false;


    //스킨 기능 관련 변수들.∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨∨.
    public static int addFlightExp = 0;
    public static float plasmaWaveCoolTime = 0;

    public static int addAttackAbility = 0;
    public static float itemReinforce08Effect = 0f;

    public static float increaseBombAttackPercent = 0f; //핵폭탄 사용시 공격력 증가 시간 설정 변수.
    public static float increaseBombAttackPercentInGame = 0f;
    public static float increaseBombAttackTime = 0;
    public static bool isIncreaseBombAttackPercent = false;

    public static float increaseScorePercent = 0f;
    public static bool isIncreaseScorePercent = false;
    public static float shieldDestroyAddScorePercent = 0f;

    public static int powerUpDropChance = 0;	// 1/10000 확률료 표시할것.
    public static float powerUpAttackIncreaseTime = 0f;
    public static float AttackPowerPercent = 0f;
    public static float AttackPowerPercentTemp = 0f;

    public static bool isdamageAddChance = false;
    public static int damageAddChance = 0;	// 1/10000 확률료 표시할것.
    public static float damageAddPercent = 0f;

    public static int coinAddChance = 0; // 1/10000 확률료 표시할것.
    public static int coinAddNumber = 1;

    public static int rechargeEnergy = 0;

    public static bool isBombRechargeDecrease = false;
    public static bool isBombRechargeDecreaseTemp = false;
    public static bool isBombToSkillGageIncrease = false;
    public static float bombRechargeDecrease = 0f;	//시간(초).
    public static int addSkillGagePercent = 0;	// 1/10000 확률료 표시할것.

    public static float scoreIncreasePercent = 0f;
    public static float comancheDeveilBreathAddSpeed = 0f;

    public static float spinballDamagePercent = 0f;

    public static float specialBombRechargeDecrease = 0f;	//시간(초).

    public static float wingboxAddtime = 0f;

    public static float friendFlightAddTime = 0f;

    public static int applyPortalLevel = 0;
    public static float bombTimeDecrease = 0f;
    public static float nowPortalLevel = 1;
    //스킨 기능 관련 변수들.∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧∧.

    public static string playerName = "PlayerName";            //Json//


    //총알과 스킬샷의 업그레이드시 들어가는 비용 마지막 똑같은 값이 하나더 들어간것은 널 에러를 막기위해 임시로 넣은값. 꼭 필요하니 지우지 말것.
    public static int[] flight000BulletUpCoin = { 0, 0, 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800, 5000, 5200, 5400, 5600, 5800, 5800 };
    public static int[] flight001BulletUpCoin = { 0, 0, 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800, 5000, 5200, 5400, 5600, 5800, 5800 };
    public static int[] flight002BulletUpCoin = { 0, 0, 200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400, 2600, 2800, 3000, 3200, 3400, 3600, 3800, 4000, 4200, 4400, 4600, 4800, 5000, 5200, 5400, 5600, 5800, 5800 };

    public static int[] flight000SkillUpCoin = { 0, 0, 1000, 5000, 10000, 30000, 30000 };
    public static int[] flight001SkillUpCoin = { 0, 0, 1000, 5000, 10000, 30000, 30000 };
    public static int[] flight002SkillUpCoin = { 0, 0, 1000, 5000, 10000, 30000, 30000 };

    //비행기별 속도-배열 앞부터 포커, 코만치, 팬텀, 차후 추가되는것은 뒤에 붙이면 됨.
    public static float[] flightSpeed = { 18f, 25f, 20f };

    //스페셜 출격 이벤트가 끝나는 시간을 저장. 시간은 항상 스트링으로 변환하여 저장한다.
    //다시 꺼내 쓸때는 DateTime timeTemp =  DateTime.FromBinary(Convert.ToInt64(시간변수)) 형식으로 변환하여 스트링이 시스템 시간과 같은 것으로 인식이 되게 만든다.
    //시간을 저장할때는
    //string timeTemp = System.DateTime.ToBinary().ToString();
    //이와같은 구조로 만들어 저장한다.
    //string endTime = System.DateTime.Now.AddMinutes(-minutesTemp).AddSeconds(-secondsTemp).ToBinary().ToString();
    //시간을 더하거나 뺄때는 바로 윗줄의 형식과 같이 해준다. 지금 예는 시간을 빼는 형태이다.
    //스페셜 출격 시간은 꼭 서버에 저장되게 만든다.
    //한번더 정리 . 시간을 저장하고 꺼내쓰는 방법.
    //시간은 DateTime 이라는 형식으로 생성을 한다.
    //시간을 따로 일반적인 형태의 변수로 저장을 할때는 string 형으로 변환한다.
    //다시 꺼내 쓸때는 string 형을 long 형으로 변환하고 DateTime.FromBinary 이용하여 다시 시간으로 변환한다.(190번줄 참고)  그값을 DateTime 형 변수에 저장하여 사용한다. 
    public static int specialAttackAddTime = 30; //스페셜 출격이 시작되고 유지되는 시간을 정한다. 기본 30분으로 한다.
    public static string specialEndTime;            //Json//
    public static string specialAttackItemName; //활성화된 스페셜 어택 미션 아이콘을 표시하기 위해 아이콘의 이름을 저장한다.            //Json//
    public static int specialAttackItemMaxNumber;            //Json//

    public static int specialDart = 900;    //900.
    public static int specialSpinball = 1500;   //1500.
    public static int specialDust = 3000;   //3000.
    public static int specialShield = 300;  //300.

    public static string gasLastAddTime;            //Json//
    public static string gasNextAddTime;            //Json//

    public static int timeRecord = 0;            //Json//

    public static int addGasTime = 600; //연료를 지급하는데 걸리는 시간을 기록한다.

    public static Hashtable duraCost = new Hashtable(); //내구도 구매 가격 설정.
    public static bool isDuraCostLoad = false;

    //스킨 락 해제 조건 관련 변수들//
    public static int flight000SortieNumber;    //Flight000Skin001//            //Json//
    public static int flight000BombUseNumber;   //Flight000Skin003//            //Json//
    public static int flight000BombUseNumberTemp;   //Flight000Skin003//
    public static int flight000ScoreHigh;       //Flight000Skin004//            //Json//

    public static int flight001EnemyKill;      //Flight001Skin001//            //Json//
    public static int flight001EnemyKillTemp;      //Flight001Skin001//
    public static int flight001GetCoin;         //Flight001Skin002//            //Json//
    public static int flight001GetCoinTemp;        //Flight001Skin002//
    public static int flight001UseSkill;        //Flight001Skin003//            //Json//    
    public static int flight001UseSkillTemp;        //Flight001Skin003//    
    public static int flight001GetPowerItem;    //Flight001Skin004//            //Json//
    public static int flight001GetPowerItemTemp;    //Flight001Skin004//


    public static int flight002KillSpinball;    //Flight002Skin001//            //Json//
    public static int flight002KillSpinballTemp;    //Flight002Skin001//
    public static int flight002SpecialAttack;   //Flight002Skin002//            //Json//
    public static int flight002CompleteInstanceMission; //Flight002Skin003//            //Json//
    public static int flight002CompleteInstanceMissionTemp; //Flight002Skin003//
    public static int flight002RescueFriend;    //Flight002Skin004//            //Json//
    public static int flight002RescueFriendTemp;    //Flight002Skin004//
    public static bool flight002WormLevel5;     //Flight002Skin005//            //Json//

    public static Hashtable skinLockOff = new Hashtable();            //Json//
    public static bool isSkinLockOffLoad = false;            //Json//
    public static Hashtable skinMedalCost = new Hashtable();
    public static bool isSkinMedalCostLoad = false;

    //스킨 락 해제 조건 관련 변수들//

    public static Hashtable goldPrice = new Hashtable();    //금화 구매 가격 설정.
    public static bool isGoldPriceLoad = false;

    public static Hashtable gasPrice = new Hashtable();     //가스(연료) 구매 가격 설정.
    public static bool isGasPriceLoad = false;

    public static Hashtable medalPrice = new Hashtable();     //메달 구매 가격 설정.
    public static bool isMedalPriceLoad = false;

    public static string[] serverFriendScoreInfo;   // 서버 점수정보.            //Json//
    public static string[] serverFriendNameInfo;    // 서버 점수당 이름 정보.             //Json//

    public static Hashtable operaterLockOff = new Hashtable();     //오퍼레이터 락오프여부.
    public static bool isOperaterLockOff = false;

    public static Hashtable flightLockOff = new Hashtable();    //비행기 락오프여부.            //Json//
    public static bool isFlightLockOff = false;            //Json//
    public static int flightWindowPosition;


    public static string ver = "20140128";

    public static int isFirstAccess = 0;            //Json//

    public static float characterSound = 1f;
    public static float fxSound = 0.3f;
    public static float bgSound = 0.5f;

    public static NameValueCollection equipSpriteName = new NameValueCollection();  //이큅 아이템별 스프라이트 이름을 저장하기 위한 변수.
    public static NameValueCollection equipItemName = new NameValueCollection();    //이큅 아이템별 스프라이트 이름을 저장하기 위한 변수.
    public static NameValueCollection equipItemPrice = new NameValueCollection();   //이큅 아이템별 스프라이트 이름을 저장하기 위한 변수.

    //할인판매창에서 쓰이는 변수들.//
    public static string saleItem01;    //할인판매창에서 쓰이는 변수들.//
    public static string saleItem02;    //할인판매창에서 쓰이는 변수들.//
    public static string saleItem03;    //할인판매창에서 쓰이는 변수들.//
    //할인판매창에서 쓰이는 변수들.//

    public static int salePriceInt;

    public static bool isCharacterSound = false;

    public static bool isKakaoUpdate = false;

    public static bool isGetFriend = false;

    public static bool isMessageLoad = false;

    public static float comboTime = 2f;

    public static bool isBreakGame = false;

    //친구 카카오아이디 저장용.
    public static string rescueFriendId = "";

    public static string rescueArlamFriendNick = "";
    public static string rescueArlamFriendId = "";
    public static bool rescueFriendBlock = false;
    public static int isSendRescueArlamNum = -1;
    public static int friendshipPoint =200;

    
    
    
    
    /////////////////////강화포인트///////////

    ////기본 포인트////
    public static int pointF00P01 = 15;
    public static int pointF00P02 = 12;
    public static int pointF00P03 = 6;
    public static int pointF00P04 = 10;

    public static int pointF01P01=13;
    public static int pointF01P02=16;
    public static int pointF01P03=8;
    public static int pointF01P04=9;

    public static int pointF02P01=17;
    public static int pointF02P02=14;
    public static int pointF02P03=7;
    public static int pointF02P04=8;
    ////기본 포인트////

    ////최대 포인트////
    public static int pointF00P01Max = 35;
    public static int pointF00P02Max = 35;
    public static int pointF00P03Max = 25;
    public static int pointF00P04Max = 30;

    public static int pointF01P01Max = 40;
    public static int pointF01P02Max = 40;
    public static int pointF01P03Max = 40;
    public static int pointF01P04Max = 35;

    public static int pointF02P01Max = 45;
    public static int pointF02P02Max = 40;
    public static int pointF02P03Max = 35;
    public static int pointF02P04Max = 40;
    ////최대 포인트////


    //내가 모아놓은 강화포인트 총량//
    public static int upgradePoint = 0;            //Json//

    public static int upgradePointF00P01 = 0;  //총알파괴력.            //Json//
    public static int upgradePointF00P02 = 0;  //총알속도.            //Json//
    public static int upgradePointF00P03 = 0;  //비행기속도.            //Json//
    public static int upgradePointF00P04 = 0;  //스킬회복총량을 감소(값이 클수록 채워야될 스킬게이지양이 줄어듬).            //Json//

    public static int upgradePointF01P01 = 0;            //Json//
    public static int upgradePointF01P02 = 0;            //Json//
    public static int upgradePointF01P03 = 0;            //Json//
    public static int upgradePointF01P04 = 0;            //Json//

    public static int upgradePointF02P01 = 0;            //Json//
    public static int upgradePointF02P02 = 0;            //Json//
    public static int upgradePointF02P03 = 0;            //Json//
    public static int upgradePointF02P04 = 0;            //Json//
    /////////////////////강화포인트///////////

    public static int pointResetCount = 0;  //강화포인트 리셋을 몇번 했는지 기록하는 부분.            //Json//

    public static bool isArlamRescue = false;

    public static int todayInt = 0;            //Json//
    public static int FriendRequestCount = 0;            //Json//
    public static int FuelSendCount = 0;            //Json//

    public static bool isBgSound = true;
    public static bool isFxSound = true;
    public static bool isArlamMessage = true;

    public static bool isGuestPlay = false;

    public static int logoutCount = 0;

    public static int isTutComplete = 0;    //2월 28일 서버에 넣어야 될 데이터 기본값은 0이며 튜토리얼 완료시 서버에 2로 저장.
    public static int skin00_04Effect = 0;
    public static float itemMagnetEffect = 0f;
    public static int Item04Effect = 0;

    public static float skin02_03Effect = 1f;
    public static float skin02_04Effect = 0f;
    public static float skin02_05Effect1 = 0f;
    public static float skin02_05Effect2 = 1f;

    public static GameObject invitedFriendTab = null;


    //원래 포어 카카오에 있던것들//
    public static string appFriendsUserId = "";
    //public static string friendsUserId = "";

    //public static string[] appFriendsUserIdFrom;
    //public static string[] friendsUserIdFrom;

    public static AppFriendInfo[] appFriendsInfo;
    public static KakaoFriendInfo[] kakaoFriendInfo;
    //원래 포어 카카오에 있던것들//

    public static int invitedFriendCount = 0;            //Json//

    public static int AllMessageCount=0;
}